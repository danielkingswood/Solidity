{
	"id": "ae6dac04f4bde77ee69ca8b6f0ddb912",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Coin Flip Contract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n// Key concepts introduced:\r\n// - Function Visibility Specifiers (external) \r\n//   https://docs.soliditylang.org/en/latest/cheatsheet.html?highlight=visibility#function-visibility-specifiers\r\n// - Function modifiers (payable, external, pure)\r\n//   https://docs.soliditylang.org/en/latest/cheatsheet.html?highlight=modifiers#modifiers\r\n// - off chain function calls (calls vs transactions)\r\n//   https://ethereum.stackexchange.com/questions/765/what-is-the-difference-between-a-transaction-and-a-call\r\n// - using cryptographic hash for commitments\r\n//   https://crypto.stackexchange.com/questions/6790/commitment-scheme-using-hash-functions\r\n\r\n// contract for coinfip (or guess) that uses the first contract\r\ncontract CoinFlip {\r\n\r\n    // player address variables - set player addressees to zero\r\n    address payable player1 = payable(0x0);\r\n    address payable player2 = payable(0x0);\r\n\r\n    // player selection variables\r\n    bytes32 p1selection;\r\n    bool p2selection;\r\n\r\n    // bet and expiration variables\r\n    uint256 public bet;\r\n    uint256 public expiration = 2**256-1; // set to max\r\n\r\n    // get the hash only using solidity - Warning: don't run this on-chain as your choice will be visible!\r\n    // this is using the \"pure\" modifier as it doesn't read or write to storage\r\n    function getHash(bool choice, uint256 nonce) external pure returns (bytes32) {\r\n        return keccak256(abi.encode(choice, nonce));\r\n    }\r\n\r\n    // player1 sets choice by giving a hash (hash = H(choice + nonce))\r\n    function makeBet(bytes32 hash) external payable {\r\n        // check if the player has already played (i.e. address not zero)\r\n        require(player1 == payable(0x0));\r\n        // check if bet > 0\r\n        require(msg.value > 0);\r\n\r\n        // get address of player 1\r\n        player1 = payable(msg.sender);\r\n        // save player1 selection\r\n        p1selection = hash;\r\n        // store the bet amount\r\n        bet = msg.value;\r\n    }\r\n    function takeBet(bool choice) external payable {\r\n        // check if the player has already played (i.e. address not zero)\r\n        require(player2 == payable(0x0));\r\n        // check if player 1 made their choise\r\n        require(player1 != payable(0x0));\r\n        // check if the bet is same as player 1\r\n        require(msg.value == bet);\r\n\r\n        // save address of player 2\r\n        player2 = payable(msg.sender);\r\n        // save player 2 choice\r\n        p2selection = choice;\r\n        // set expiration date\r\n        expiration = block.timestamp + 24 hours;\r\n\r\n    }\r\n    // find out who won, player1 provides choice(0/1) and nonce(32 byte unsigned int) that match stored hash\r\n    // note that the address of player doesn't need to be checked here, as only player should know the correct nonce\r\n    function reveal(bool choice, uint256 nonce) external {\r\n        // check if H(choice + nonce) is equal to stored hash\r\n        require(keccak256(abi.encode(choice, nonce)) == p1selection);\r\n        // check if second player played\r\n        require(player2 != payable(0x0));\r\n        // check if the bet hasn't expired\r\n        require(block.timestamp < expiration);\r\n\r\n        // players made the same choice => 2 wins\r\n        if (p2selection == choice) {\r\n            // player2 gets ether\r\n            player2.transfer(address(this).balance);\r\n        }\r\n        // players made different choices => 1 wins\r\n        else {\r\n            // player1 gets ether\r\n            player1.transfer(address(this).balance);\r\n        }\r\n\r\n        // reset values\r\n        bet = 0;\r\n        player1 = payable(0x0);\r\n        player2 = payable(0x0);\r\n        expiration = 2**256-1;\r\n    }\r\n\r\n    // player 1 can cancel bet if player2 hasn't played yet\r\n    function cancel() external {\r\n        // check if it is player1\r\n        require(msg.sender == player1);\r\n        // check if player2 hasn't played yet\r\n        require(player2 == payable(0x0));\r\n\r\n        // player1 gets bet back\r\n        player1.transfer(address(this).balance);\r\n\r\n        // reset values\r\n        bet = 0;\r\n        player1 = payable(0x0);\r\n        expiration = 2**256-1;\r\n    }\r\n\r\n    // if player1 doesn't reveal their choice before the bet expires, palyer2 can timeout and win\r\n    function timeout() external {\r\n        // check if it has expired\r\n        require(block.timestamp >= expiration);\r\n\r\n        // player2 gets both bets\r\n        player2.transfer(address(this).balance);\r\n\r\n        // reset values\r\n        bet = 0;\r\n        player1 = payable(0x0);\r\n        player2 = payable(0x0);\r\n        expiration = 2**256-1;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"Coin Flip Contract.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"name": "bet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "expiration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "getHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "makeBet",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "reveal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								}
							],
							"name": "takeBet",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Coin Flip Contract.sol\":782:4638  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"Coin Flip Contract.sol\":908:911  0x0 */\n  0x00\n    /* \"Coin Flip Contract.sol\":874:912  address payable player1 = payable(0x0) */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Coin Flip Contract.sol\":953:956  0x0 */\n  0x00\n    /* \"Coin Flip Contract.sol\":919:957  address payable player2 = payable(0x0) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Coin Flip Contract.sol\":1142:1150  2**256-1 */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"Coin Flip Contract.sol\":1114:1150  uint256 public expiration = 2**256-1 */\n  0x05\n  sstore\n    /* \"Coin Flip Contract.sol\":782:4638  contract CoinFlip {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Coin Flip Contract.sol\":782:4638  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4665096d\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x4665096d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70dea79a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe6759813\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x11610c25\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x284152dc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38a3fde7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x39f3027d\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Coin Flip Contract.sol\":1089:1107  uint256 public bet */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coin Flip Contract.sol\":1581:2018  function makeBet(bytes32 hash) external payable {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Coin Flip Contract.sol\":2024:2600  function takeBet(bool choice) external payable {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Coin Flip Contract.sol\":2834:3709  function reveal(bool choice, uint256 nonce) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Coin Flip Contract.sol\":1114:1150  uint256 public expiration = 2**256-1 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coin Flip Contract.sol\":4282:4633  function timeout() external {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"Coin Flip Contract.sol\":1362:1501  function getHash(bool choice, uint256 nonce) external pure returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coin Flip Contract.sol\":3778:4175  function cancel() external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Coin Flip Contract.sol\":1089:1107  uint256 public bet */\n    tag_13:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Coin Flip Contract.sol\":1581:2018  function makeBet(bytes32 hash) external payable {... */\n    tag_19:\n        /* \"Coin Flip Contract.sol\":1742:1745  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":1723:1746  player1 == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":1723:1730  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":1723:1746  player1 == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Coin Flip Contract.sol\":1715:1747  require(player1 == payable(0x0)) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"Coin Flip Contract.sol\":1807:1808  0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":1795:1804  msg.value */\n      callvalue\n        /* \"Coin Flip Contract.sol\":1795:1808  msg.value > 0 */\n      gt\n        /* \"Coin Flip Contract.sol\":1787:1809  require(msg.value > 0) */\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n        /* \"Coin Flip Contract.sol\":1876:1886  msg.sender */\n      caller\n        /* \"Coin Flip Contract.sol\":1858:1865  player1 */\n      0x00\n      dup1\n        /* \"Coin Flip Contract.sol\":1858:1887  player1 = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":1947:1951  hash */\n      dup1\n        /* \"Coin Flip Contract.sol\":1933:1944  p1selection */\n      0x02\n        /* \"Coin Flip Contract.sol\":1933:1951  p1selection = hash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":2001:2010  msg.value */\n      callvalue\n        /* \"Coin Flip Contract.sol\":1995:1998  bet */\n      0x04\n        /* \"Coin Flip Contract.sol\":1995:2010  bet = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":1581:2018  function makeBet(bytes32 hash) external payable {... */\n      pop\n      jump\t// out\n        /* \"Coin Flip Contract.sol\":2024:2600  function takeBet(bool choice) external payable {... */\n    tag_23:\n        /* \"Coin Flip Contract.sol\":2184:2187  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":2165:2188  player2 == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":2165:2172  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":2165:2188  player2 == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Coin Flip Contract.sol\":2157:2189  require(player2 == payable(0x0)) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"Coin Flip Contract.sol\":2275:2278  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":2256:2279  player1 != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":2256:2263  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":2256:2279  player1 != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Coin Flip Contract.sol\":2248:2280  require(player1 != payable(0x0)) */\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n        /* \"Coin Flip Contract.sol\":2361:2364  bet */\n      sload(0x04)\n        /* \"Coin Flip Contract.sol\":2348:2357  msg.value */\n      callvalue\n        /* \"Coin Flip Contract.sol\":2348:2364  msg.value == bet */\n      eq\n        /* \"Coin Flip Contract.sol\":2340:2365  require(msg.value == bet) */\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n        /* \"Coin Flip Contract.sol\":2433:2443  msg.sender */\n      caller\n        /* \"Coin Flip Contract.sol\":2415:2422  player2 */\n      0x01\n      0x00\n        /* \"Coin Flip Contract.sol\":2415:2444  player2 = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":2502:2508  choice */\n      dup1\n        /* \"Coin Flip Contract.sol\":2488:2499  p2selection */\n      0x03\n      0x00\n        /* \"Coin Flip Contract.sol\":2488:2508  p2selection = choice */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":2582:2590  24 hours */\n      0x015180\n        /* \"Coin Flip Contract.sol\":2564:2579  block.timestamp */\n      timestamp\n        /* \"Coin Flip Contract.sol\":2564:2590  block.timestamp + 24 hours */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"Coin Flip Contract.sol\":2551:2561  expiration */\n      0x05\n        /* \"Coin Flip Contract.sol\":2551:2590  expiration = block.timestamp + 24 hours */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":2024:2600  function takeBet(bool choice) external payable {... */\n      pop\n      jump\t// out\n        /* \"Coin Flip Contract.sol\":2834:3709  function reveal(bool choice, uint256 nonce) external {... */\n    tag_28:\n        /* \"Coin Flip Contract.sol\":3009:3020  p1selection */\n      sload(0x02)\n        /* \"Coin Flip Contract.sol\":2990:2996  choice */\n      dup3\n        /* \"Coin Flip Contract.sol\":2998:3003  nonce */\n      dup3\n        /* \"Coin Flip Contract.sol\":2979:3004  abi.encode(choice, nonce) */\n      add(0x20, mload(0x40))\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Coin Flip Contract.sol\":2969:3005  keccak256(abi.encode(choice, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Coin Flip Contract.sol\":2969:3020  keccak256(abi.encode(choice, nonce)) == p1selection */\n      eq\n        /* \"Coin Flip Contract.sol\":2961:3021  require(keccak256(abi.encode(choice, nonce)) == p1selection) */\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n        /* \"Coin Flip Contract.sol\":3101:3104  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":3082:3105  player2 != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3082:3089  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3082:3105  player2 != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Coin Flip Contract.sol\":3074:3106  require(player2 != payable(0x0)) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"Coin Flip Contract.sol\":3187:3197  expiration */\n      sload(0x05)\n        /* \"Coin Flip Contract.sol\":3169:3184  block.timestamp */\n      timestamp\n        /* \"Coin Flip Contract.sol\":3169:3197  block.timestamp < expiration */\n      lt\n        /* \"Coin Flip Contract.sol\":3161:3198  require(block.timestamp < expiration) */\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n        /* \"Coin Flip Contract.sol\":3281:3287  choice */\n      dup2\n        /* \"Coin Flip Contract.sol\":3266:3287  p2selection == choice */\n      iszero\n      iszero\n        /* \"Coin Flip Contract.sol\":3266:3277  p2selection */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Coin Flip Contract.sol\":3266:3287  p2selection == choice */\n      iszero\n      iszero\n      sub\n        /* \"Coin Flip Contract.sol\":3262:3559  if (p2selection == choice) {... */\n      tag_60\n      jumpi\n        /* \"Coin Flip Contract.sol\":3339:3346  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3339:3355  player2.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3339:3378  player2.transfer(address(this).balance) */\n      0x08fc\n        /* \"Coin Flip Contract.sol\":3356:3377  address(this).balance */\n      selfbalance\n        /* \"Coin Flip Contract.sol\":3339:3378  player2.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n        /* \"Coin Flip Contract.sol\":3262:3559  if (p2selection == choice) {... */\n      jump(tag_63)\n    tag_60:\n        /* \"Coin Flip Contract.sol\":3508:3515  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3508:3524  player1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3508:3547  player1.transfer(address(this).balance) */\n      0x08fc\n        /* \"Coin Flip Contract.sol\":3525:3546  address(this).balance */\n      selfbalance\n        /* \"Coin Flip Contract.sol\":3508:3547  player1.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n        /* \"Coin Flip Contract.sol\":3262:3559  if (p2selection == choice) {... */\n    tag_63:\n        /* \"Coin Flip Contract.sol\":3602:3603  0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":3596:3599  bet */\n      0x04\n        /* \"Coin Flip Contract.sol\":3596:3603  bet = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":3632:3635  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":3614:3621  player1 */\n      dup1\n      0x00\n        /* \"Coin Flip Contract.sol\":3614:3636  player1 = payable(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":3665:3668  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":3647:3654  player2 */\n      0x01\n      0x00\n        /* \"Coin Flip Contract.sol\":3647:3669  player2 = payable(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":3693:3701  2**256-1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Coin Flip Contract.sol\":3680:3690  expiration */\n      0x05\n        /* \"Coin Flip Contract.sol\":3680:3701  expiration = 2**256-1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":2834:3709  function reveal(bool choice, uint256 nonce) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Coin Flip Contract.sol\":1114:1150  uint256 public expiration = 2**256-1 */\n    tag_31:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Coin Flip Contract.sol\":4282:4633  function timeout() external {... */\n    tag_35:\n        /* \"Coin Flip Contract.sol\":4384:4394  expiration */\n      sload(0x05)\n        /* \"Coin Flip Contract.sol\":4365:4380  block.timestamp */\n      timestamp\n        /* \"Coin Flip Contract.sol\":4365:4394  block.timestamp >= expiration */\n      lt\n      iszero\n        /* \"Coin Flip Contract.sol\":4357:4395  require(block.timestamp >= expiration) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"Coin Flip Contract.sol\":4443:4450  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":4443:4459  player2.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":4443:4482  player2.transfer(address(this).balance) */\n      0x08fc\n        /* \"Coin Flip Contract.sol\":4460:4481  address(this).balance */\n      selfbalance\n        /* \"Coin Flip Contract.sol\":4443:4482  player2.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n        /* \"Coin Flip Contract.sol\":4526:4527  0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":4520:4523  bet */\n      0x04\n        /* \"Coin Flip Contract.sol\":4520:4527  bet = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":4556:4559  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":4538:4545  player1 */\n      dup1\n      0x00\n        /* \"Coin Flip Contract.sol\":4538:4560  player1 = payable(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":4589:4592  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":4571:4578  player2 */\n      0x01\n      0x00\n        /* \"Coin Flip Contract.sol\":4571:4593  player2 = payable(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":4617:4625  2**256-1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Coin Flip Contract.sol\":4604:4614  expiration */\n      0x05\n        /* \"Coin Flip Contract.sol\":4604:4625  expiration = 2**256-1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":4282:4633  function timeout() external {... */\n      jump\t// out\n        /* \"Coin Flip Contract.sol\":1362:1501  function getHash(bool choice, uint256 nonce) external pure returns (bytes32) {... */\n    tag_39:\n        /* \"Coin Flip Contract.sol\":1430:1437  bytes32 */\n      0x00\n        /* \"Coin Flip Contract.sol\":1478:1484  choice */\n      dup3\n        /* \"Coin Flip Contract.sol\":1486:1491  nonce */\n      dup3\n        /* \"Coin Flip Contract.sol\":1467:1492  abi.encode(choice, nonce) */\n      add(0x20, mload(0x40))\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Coin Flip Contract.sol\":1457:1493  keccak256(abi.encode(choice, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Coin Flip Contract.sol\":1450:1493  return keccak256(abi.encode(choice, nonce)) */\n      swap1\n      pop\n        /* \"Coin Flip Contract.sol\":1362:1501  function getHash(bool choice, uint256 nonce) external pure returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Coin Flip Contract.sol\":3778:4175  function cancel() external {... */\n    tag_44:\n        /* \"Coin Flip Contract.sol\":3873:3880  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3859:3880  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3859:3869  msg.sender */\n      caller\n        /* \"Coin Flip Contract.sol\":3859:3880  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Coin Flip Contract.sol\":3851:3881  require(msg.sender == player1) */\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n        /* \"Coin Flip Contract.sol\":3966:3969  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":3947:3970  player2 == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3947:3954  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":3947:3970  player2 == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Coin Flip Contract.sol\":3939:3971  require(player2 == payable(0x0)) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n        /* \"Coin Flip Contract.sol\":4018:4025  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":4018:4034  player1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Coin Flip Contract.sol\":4018:4057  player1.transfer(address(this).balance) */\n      0x08fc\n        /* \"Coin Flip Contract.sol\":4035:4056  address(this).balance */\n      selfbalance\n        /* \"Coin Flip Contract.sol\":4018:4057  player1.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n        /* \"Coin Flip Contract.sol\":4101:4102  0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":4095:4098  bet */\n      0x04\n        /* \"Coin Flip Contract.sol\":4095:4102  bet = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":4131:4134  0x0 */\n      0x00\n        /* \"Coin Flip Contract.sol\":4113:4120  player1 */\n      dup1\n      0x00\n        /* \"Coin Flip Contract.sol\":4113:4135  player1 = payable(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":4159:4167  2**256-1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Coin Flip Contract.sol\":4146:4156  expiration */\n      0x05\n        /* \"Coin Flip Contract.sol\":4146:4167  expiration = 2**256-1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coin Flip Contract.sol\":3778:4175  function cancel() external {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_77:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_78:\n        /* \"#utility.yul\":177:201   */\n      tag_96\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_77\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_15:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_98\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_78\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_80:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:846   */\n    tag_82:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":824:840   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":852:974   */\n    tag_83:\n        /* \"#utility.yul\":925:949   */\n      tag_104\n        /* \"#utility.yul\":943:948   */\n      dup2\n        /* \"#utility.yul\":925:949   */\n      tag_82\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":918:923   */\n      dup2\n        /* \"#utility.yul\":915:950   */\n      eq\n        /* \"#utility.yul\":905:968   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":964:965   */\n      0x00\n        /* \"#utility.yul\":961:962   */\n      dup1\n        /* \"#utility.yul\":954:966   */\n      revert\n        /* \"#utility.yul\":905:968   */\n    tag_105:\n        /* \"#utility.yul\":852:974   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":980:1119   */\n    tag_84:\n        /* \"#utility.yul\":1026:1031   */\n      0x00\n        /* \"#utility.yul\":1064:1070   */\n      dup2\n        /* \"#utility.yul\":1051:1071   */\n      calldataload\n        /* \"#utility.yul\":1042:1071   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1113   */\n      tag_107\n        /* \"#utility.yul\":1107:1112   */\n      dup2\n        /* \"#utility.yul\":1080:1113   */\n      tag_83\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":980:1119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1125:1454   */\n    tag_18:\n        /* \"#utility.yul\":1184:1190   */\n      0x00\n        /* \"#utility.yul\":1233:1235   */\n      0x20\n        /* \"#utility.yul\":1221:1230   */\n      dup3\n        /* \"#utility.yul\":1212:1219   */\n      dup5\n        /* \"#utility.yul\":1208:1231   */\n      sub\n        /* \"#utility.yul\":1204:1236   */\n      slt\n        /* \"#utility.yul\":1201:1320   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1239:1318   */\n      tag_110\n      tag_80\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1201:1320   */\n    tag_109:\n        /* \"#utility.yul\":1359:1360   */\n      0x00\n        /* \"#utility.yul\":1384:1437   */\n      tag_111\n        /* \"#utility.yul\":1429:1436   */\n      dup5\n        /* \"#utility.yul\":1420:1426   */\n      dup3\n        /* \"#utility.yul\":1409:1418   */\n      dup6\n        /* \"#utility.yul\":1405:1427   */\n      add\n        /* \"#utility.yul\":1384:1437   */\n      tag_84\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1374:1437   */\n      swap2\n      pop\n        /* \"#utility.yul\":1330:1447   */\n      pop\n        /* \"#utility.yul\":1125:1454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1460:1550   */\n    tag_85:\n        /* \"#utility.yul\":1494:1501   */\n      0x00\n        /* \"#utility.yul\":1537:1542   */\n      dup2\n        /* \"#utility.yul\":1530:1543   */\n      iszero\n        /* \"#utility.yul\":1523:1544   */\n      iszero\n        /* \"#utility.yul\":1512:1544   */\n      swap1\n      pop\n        /* \"#utility.yul\":1460:1550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1672   */\n    tag_86:\n        /* \"#utility.yul\":1626:1647   */\n      tag_114\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1626:1647   */\n      tag_85\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1619:1624   */\n      dup2\n        /* \"#utility.yul\":1616:1648   */\n      eq\n        /* \"#utility.yul\":1606:1666   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1659:1660   */\n      dup1\n        /* \"#utility.yul\":1652:1664   */\n      revert\n        /* \"#utility.yul\":1606:1666   */\n    tag_115:\n        /* \"#utility.yul\":1556:1672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1678:1811   */\n    tag_87:\n        /* \"#utility.yul\":1721:1726   */\n      0x00\n        /* \"#utility.yul\":1759:1765   */\n      dup2\n        /* \"#utility.yul\":1746:1766   */\n      calldataload\n        /* \"#utility.yul\":1737:1766   */\n      swap1\n      pop\n        /* \"#utility.yul\":1775:1805   */\n      tag_117\n        /* \"#utility.yul\":1799:1804   */\n      dup2\n        /* \"#utility.yul\":1775:1805   */\n      tag_86\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1678:1811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1817:2140   */\n    tag_22:\n        /* \"#utility.yul\":1873:1879   */\n      0x00\n        /* \"#utility.yul\":1922:1924   */\n      0x20\n        /* \"#utility.yul\":1910:1919   */\n      dup3\n        /* \"#utility.yul\":1901:1908   */\n      dup5\n        /* \"#utility.yul\":1897:1920   */\n      sub\n        /* \"#utility.yul\":1893:1925   */\n      slt\n        /* \"#utility.yul\":1890:2009   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":1928:2007   */\n      tag_120\n      tag_80\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1890:2009   */\n    tag_119:\n        /* \"#utility.yul\":2048:2049   */\n      0x00\n        /* \"#utility.yul\":2073:2123   */\n      tag_121\n        /* \"#utility.yul\":2115:2122   */\n      dup5\n        /* \"#utility.yul\":2106:2112   */\n      dup3\n        /* \"#utility.yul\":2095:2104   */\n      dup6\n        /* \"#utility.yul\":2091:2113   */\n      add\n        /* \"#utility.yul\":2073:2123   */\n      tag_87\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2063:2123   */\n      swap2\n      pop\n        /* \"#utility.yul\":2019:2133   */\n      pop\n        /* \"#utility.yul\":1817:2140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2146:2268   */\n    tag_88:\n        /* \"#utility.yul\":2219:2243   */\n      tag_123\n        /* \"#utility.yul\":2237:2242   */\n      dup2\n        /* \"#utility.yul\":2219:2243   */\n      tag_77\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2212:2217   */\n      dup2\n        /* \"#utility.yul\":2209:2244   */\n      eq\n        /* \"#utility.yul\":2199:2262   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2258:2259   */\n      0x00\n        /* \"#utility.yul\":2255:2256   */\n      dup1\n        /* \"#utility.yul\":2248:2260   */\n      revert\n        /* \"#utility.yul\":2199:2262   */\n    tag_124:\n        /* \"#utility.yul\":2146:2268   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2274:2413   */\n    tag_89:\n        /* \"#utility.yul\":2320:2325   */\n      0x00\n        /* \"#utility.yul\":2358:2364   */\n      dup2\n        /* \"#utility.yul\":2345:2365   */\n      calldataload\n        /* \"#utility.yul\":2336:2365   */\n      swap1\n      pop\n        /* \"#utility.yul\":2374:2407   */\n      tag_126\n        /* \"#utility.yul\":2401:2406   */\n      dup2\n        /* \"#utility.yul\":2374:2407   */\n      tag_88\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2274:2413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2419:2887   */\n    tag_27:\n        /* \"#utility.yul\":2484:2490   */\n      0x00\n        /* \"#utility.yul\":2492:2498   */\n      dup1\n        /* \"#utility.yul\":2541:2543   */\n      0x40\n        /* \"#utility.yul\":2529:2538   */\n      dup4\n        /* \"#utility.yul\":2520:2527   */\n      dup6\n        /* \"#utility.yul\":2516:2539   */\n      sub\n        /* \"#utility.yul\":2512:2544   */\n      slt\n        /* \"#utility.yul\":2509:2628   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":2547:2626   */\n      tag_129\n      tag_80\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2509:2628   */\n    tag_128:\n        /* \"#utility.yul\":2667:2668   */\n      0x00\n        /* \"#utility.yul\":2692:2742   */\n      tag_130\n        /* \"#utility.yul\":2734:2741   */\n      dup6\n        /* \"#utility.yul\":2725:2731   */\n      dup3\n        /* \"#utility.yul\":2714:2723   */\n      dup7\n        /* \"#utility.yul\":2710:2732   */\n      add\n        /* \"#utility.yul\":2692:2742   */\n      tag_87\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2682:2742   */\n      swap3\n      pop\n        /* \"#utility.yul\":2638:2752   */\n      pop\n        /* \"#utility.yul\":2791:2793   */\n      0x20\n        /* \"#utility.yul\":2817:2870   */\n      tag_131\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_89\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2807:2870   */\n      swap2\n      pop\n        /* \"#utility.yul\":2762:2880   */\n      pop\n        /* \"#utility.yul\":2419:2887   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:3011   */\n    tag_90:\n        /* \"#utility.yul\":2980:3004   */\n      tag_133\n        /* \"#utility.yul\":2998:3003   */\n      dup2\n        /* \"#utility.yul\":2980:3004   */\n      tag_82\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2975:2978   */\n      dup3\n        /* \"#utility.yul\":2968:3005   */\n      mstore\n        /* \"#utility.yul\":2893:3011   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3017:3239   */\n    tag_41:\n        /* \"#utility.yul\":3110:3114   */\n      0x00\n        /* \"#utility.yul\":3148:3150   */\n      0x20\n        /* \"#utility.yul\":3137:3146   */\n      dup3\n        /* \"#utility.yul\":3133:3151   */\n      add\n        /* \"#utility.yul\":3125:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3161:3232   */\n      tag_135\n        /* \"#utility.yul\":3229:3230   */\n      0x00\n        /* \"#utility.yul\":3218:3227   */\n      dup4\n        /* \"#utility.yul\":3214:3231   */\n      add\n        /* \"#utility.yul\":3205:3211   */\n      dup5\n        /* \"#utility.yul\":3161:3232   */\n      tag_90\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3017:3239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3245:3425   */\n    tag_91:\n        /* \"#utility.yul\":3293:3370   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3290:3291   */\n      0x00\n        /* \"#utility.yul\":3283:3371   */\n      mstore\n        /* \"#utility.yul\":3390:3394   */\n      0x11\n        /* \"#utility.yul\":3387:3388   */\n      0x04\n        /* \"#utility.yul\":3380:3395   */\n      mstore\n        /* \"#utility.yul\":3414:3418   */\n      0x24\n        /* \"#utility.yul\":3411:3412   */\n      0x00\n        /* \"#utility.yul\":3404:3419   */\n      revert\n        /* \"#utility.yul\":3431:3622   */\n    tag_53:\n        /* \"#utility.yul\":3471:3474   */\n      0x00\n        /* \"#utility.yul\":3490:3510   */\n      tag_138\n        /* \"#utility.yul\":3508:3509   */\n      dup3\n        /* \"#utility.yul\":3490:3510   */\n      tag_77\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3485:3510   */\n      swap2\n      pop\n        /* \"#utility.yul\":3524:3544   */\n      tag_139\n        /* \"#utility.yul\":3542:3543   */\n      dup4\n        /* \"#utility.yul\":3524:3544   */\n      tag_77\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3519:3544   */\n      swap3\n      pop\n        /* \"#utility.yul\":3567:3568   */\n      dup3\n        /* \"#utility.yul\":3564:3565   */\n      dup3\n        /* \"#utility.yul\":3560:3569   */\n      add\n        /* \"#utility.yul\":3553:3569   */\n      swap1\n      pop\n        /* \"#utility.yul\":3588:3591   */\n      dup1\n        /* \"#utility.yul\":3585:3586   */\n      dup3\n        /* \"#utility.yul\":3582:3592   */\n      gt\n        /* \"#utility.yul\":3579:3615   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3595:3613   */\n      tag_141\n      tag_91\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3579:3615   */\n    tag_140:\n        /* \"#utility.yul\":3431:3622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3628:3737   */\n    tag_92:\n        /* \"#utility.yul\":3709:3730   */\n      tag_143\n        /* \"#utility.yul\":3724:3729   */\n      dup2\n        /* \"#utility.yul\":3709:3730   */\n      tag_85\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3704:3707   */\n      dup3\n        /* \"#utility.yul\":3697:3731   */\n      mstore\n        /* \"#utility.yul\":3628:3737   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3743:4063   */\n    tag_56:\n        /* \"#utility.yul\":3858:3862   */\n      0x00\n        /* \"#utility.yul\":3896:3898   */\n      0x40\n        /* \"#utility.yul\":3885:3894   */\n      dup3\n        /* \"#utility.yul\":3881:3899   */\n      add\n        /* \"#utility.yul\":3873:3899   */\n      swap1\n      pop\n        /* \"#utility.yul\":3909:3974   */\n      tag_145\n        /* \"#utility.yul\":3971:3972   */\n      0x00\n        /* \"#utility.yul\":3960:3969   */\n      dup4\n        /* \"#utility.yul\":3956:3973   */\n      add\n        /* \"#utility.yul\":3947:3953   */\n      dup6\n        /* \"#utility.yul\":3909:3974   */\n      tag_92\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3984:4056   */\n      tag_146\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4041:4050   */\n      dup4\n        /* \"#utility.yul\":4037:4055   */\n      add\n        /* \"#utility.yul\":4028:4034   */\n      dup5\n        /* \"#utility.yul\":3984:4056   */\n      tag_78\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3743:4063   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122025e7ba87de1e0978bdfdaf8561f84a4e379b283e2281990062553f81f58cc8eb64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6005553480156100b757600080fd5b50610b32806100c76000396000f3fe60806040526004361061007b5760003560e01c80634665096d1161004e5780634665096d1461010c57806370dea79a14610137578063e67598131461014e578063ea8a1af01461018b5761007b565b806311610c2514610080578063284152dc146100ab57806338a3fde7146100c757806339f3027d146100e3575b600080fd5b34801561008c57600080fd5b506100956101a2565b6040516100a291906108e3565b60405180910390f35b6100c560048036038101906100c09190610939565b6101a8565b005b6100e160048036038101906100dc919061099e565b61025f565b005b3480156100ef57600080fd5b5061010a600480360381019061010591906109f7565b610394565b005b34801561011857600080fd5b506101216105d9565b60405161012e91906108e3565b60405180910390f35b34801561014357600080fd5b5061014c6105df565b005b34801561015a57600080fd5b50610175600480360381019061017091906109f7565b61070b565b6040516101829190610a46565b60405180910390f35b34801561019757600080fd5b506101a061073e565b005b60045481565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020157600080fd5b6000341161020e57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055503460048190555050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102ba57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361031357600080fd5b600454341461032157600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548160ff021916908315150217905550620151804261038b9190610a90565b60058190555050565b60025482826040516020016103aa929190610ad3565b60405160208183030381529060405280519060200120146103ca57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361042557600080fd5b600554421061043357600080fd5b811515600360009054906101000a900460ff161515036104bb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104b5573d6000803e3d6000fd5b50610523565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610521573d6000803e3d6000fd5b505b600060048190555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6005819055505050565b60055481565b6005544210156105ee57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610656573d6000803e3d6000fd5b50600060048190555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600581905550565b60008282604051602001610720929190610ad3565b60405160208183030381529060405280519060200120905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107f157600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610857573d6000803e3d6000fd5b50600060048190555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600581905550565b6000819050919050565b6108dd816108ca565b82525050565b60006020820190506108f860008301846108d4565b92915050565b600080fd5b6000819050919050565b61091681610903565b811461092157600080fd5b50565b6000813590506109338161090d565b92915050565b60006020828403121561094f5761094e6108fe565b5b600061095d84828501610924565b91505092915050565b60008115159050919050565b61097b81610966565b811461098657600080fd5b50565b60008135905061099881610972565b92915050565b6000602082840312156109b4576109b36108fe565b5b60006109c284828501610989565b91505092915050565b6109d4816108ca565b81146109df57600080fd5b50565b6000813590506109f1816109cb565b92915050565b60008060408385031215610a0e57610a0d6108fe565b5b6000610a1c85828601610989565b9250506020610a2d858286016109e2565b9150509250929050565b610a4081610903565b82525050565b6000602082019050610a5b6000830184610a37565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9b826108ca565b9150610aa6836108ca565b9250828201905080821115610abe57610abd610a61565b5b92915050565b610acd81610966565b82525050565b6000604082019050610ae86000830185610ac4565b610af560208301846108d4565b939250505056fea264697066735822122025e7ba87de1e0978bdfdaf8561f84a4e379b283e2281990062553f81f58cc8eb64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB32 DUP1 PUSH2 0xC7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4665096D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x4665096D EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x70DEA79A EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xE6759813 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x18B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x11610C25 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x284152DC EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x38A3FDE7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x39F3027D EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x5DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x15180 TIMESTAMP PUSH2 0x38B SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AA SWAP3 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x4BB JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x720 SWAP3 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x857 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8DD DUP2 PUSH2 0x8CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x916 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 EQ PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x933 DUP2 PUSH2 0x90D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94F JUMPI PUSH2 0x94E PUSH2 0x8FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x95D DUP5 DUP3 DUP6 ADD PUSH2 0x924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x966 JUMP JUMPDEST DUP2 EQ PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9B3 PUSH2 0x8FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C2 DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D4 DUP2 PUSH2 0x8CA JUMP JUMPDEST DUP2 EQ PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9F1 DUP2 PUSH2 0x9CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x8FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1C DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2D DUP6 DUP3 DUP7 ADD PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xA40 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA9B DUP3 PUSH2 0x8CA JUMP JUMPDEST SWAP2 POP PUSH2 0xAA6 DUP4 PUSH2 0x8CA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH2 0xABD PUSH2 0xA61 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xACD DUP2 PUSH2 0x966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xE7 0xBA DUP8 0xDE 0x1E MULMOD PUSH25 0xBDFDAF8561F84A4E379B283E2281990062553F81F58CC8EB64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "782:3856:0:-:0;;;908:3;874:38;;;;;;;;;;;;;;;;;;;;953:3;919:38;;;;;;;;;;;;;;;;;;;;1142:8;1114:36;;782:3856;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@bet_19": {
									"entryPoint": 418,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cancel_270": {
									"entryPoint": 1854,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@expiration_26": {
									"entryPoint": 1497,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getHash_44": {
									"entryPoint": 1803,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@makeBet_83": {
									"entryPoint": 424,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reveal_221": {
									"entryPoint": 916,
									"id": 221,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@takeBet_133": {
									"entryPoint": 607,
									"id": 133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@timeout_317": {
									"entryPoint": 1503,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2302,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4066:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "835:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:1",
														"type": ""
													}
												],
												"src": "769:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "895:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "952:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "961:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "964:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "954:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "954:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "954:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "918:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "943:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "925:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "925:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "915:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "915:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:43:1"
															},
															"nodeType": "YulIf",
															"src": "905:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "888:5:1",
														"type": ""
													}
												],
												"src": "852:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1032:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1042:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1064:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1051:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1042:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1107:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1080:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1080:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1010:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1018:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1026:5:1",
														"type": ""
													}
												],
												"src": "980:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1191:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1237:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1239:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1239:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1239:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1212:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1221:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1208:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1233:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:32:1"
															},
															"nodeType": "YulIf",
															"src": "1201:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1330:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1345:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1359:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1349:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1374:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1409:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1420:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1405:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1429:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1384:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1384:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1374:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1161:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1172:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1184:6:1",
														"type": ""
													}
												],
												"src": "1125:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1502:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1512:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1537:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1530:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1530:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1512:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1484:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1494:7:1",
														"type": ""
													}
												],
												"src": "1460:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1596:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1650:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1659:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1662:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1652:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1652:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1641:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1626:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1626:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1616:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1616:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1609:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:40:1"
															},
															"nodeType": "YulIf",
															"src": "1606:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1589:5:1",
														"type": ""
													}
												],
												"src": "1556:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1727:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1737:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1759:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1746:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1799:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1775:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1775:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1705:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1713:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1721:5:1",
														"type": ""
													}
												],
												"src": "1678:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1880:260:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1928:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1928:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1928:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1901:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1910:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1897:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1922:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1893:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1893:32:1"
															},
															"nodeType": "YulIf",
															"src": "1890:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2019:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2034:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2038:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2063:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2095:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2106:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2091:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2091:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2115:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2073:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2073:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2063:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1850:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1861:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1873:6:1",
														"type": ""
													}
												],
												"src": "1817:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2189:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2246:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2255:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2258:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2248:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2248:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2248:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2212:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2237:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2219:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2219:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2209:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2209:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:43:1"
															},
															"nodeType": "YulIf",
															"src": "2199:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2182:5:1",
														"type": ""
													}
												],
												"src": "2146:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2326:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2336:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2358:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2345:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2336:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2401:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2374:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2374:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2304:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2312:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2320:5:1",
														"type": ""
													}
												],
												"src": "2274:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2499:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2545:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2547:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2547:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2547:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2520:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2529:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2516:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2516:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2541:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2512:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:32:1"
															},
															"nodeType": "YulIf",
															"src": "2509:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2638:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2653:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2657:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2682:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2714:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2725:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2710:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2710:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2734:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2692:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2682:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2762:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2777:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2791:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2781:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2807:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2461:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2472:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2492:6:1",
														"type": ""
													}
												],
												"src": "2419:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2958:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2975:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2998:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2980:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2968:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2968:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2946:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2953:3:1",
														"type": ""
													}
												],
												"src": "2893:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3115:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3205:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3229:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3214:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3161:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3161:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3161:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3087:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3099:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3110:4:1",
														"type": ""
													}
												],
												"src": "3017:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3390:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3380:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3414:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3404:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3245:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3475:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3485:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3508:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3490:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3490:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3485:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3519:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3542:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3524:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3524:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3519:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3553:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3564:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3567:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3560:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3560:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3553:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3593:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3595:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3595:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3595:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3585:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3588:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3582:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3582:10:1"
															},
															"nodeType": "YulIf",
															"src": "3579:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3462:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3465:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3471:3:1",
														"type": ""
													}
												],
												"src": "3431:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3687:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3704:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3724:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3709:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3709:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3697:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3697:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3675:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3682:3:1",
														"type": ""
													}
												],
												"src": "3628:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3863:200:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3873:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3885:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3896:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3881:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3873:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3947:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3960:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3971:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3956:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3956:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3909:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3909:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4028:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4052:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4037:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3984:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3984:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3827:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3839:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3847:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3858:4:1",
														"type": ""
													}
												],
												"src": "3743:320:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c80634665096d1161004e5780634665096d1461010c57806370dea79a14610137578063e67598131461014e578063ea8a1af01461018b5761007b565b806311610c2514610080578063284152dc146100ab57806338a3fde7146100c757806339f3027d146100e3575b600080fd5b34801561008c57600080fd5b506100956101a2565b6040516100a291906108e3565b60405180910390f35b6100c560048036038101906100c09190610939565b6101a8565b005b6100e160048036038101906100dc919061099e565b61025f565b005b3480156100ef57600080fd5b5061010a600480360381019061010591906109f7565b610394565b005b34801561011857600080fd5b506101216105d9565b60405161012e91906108e3565b60405180910390f35b34801561014357600080fd5b5061014c6105df565b005b34801561015a57600080fd5b50610175600480360381019061017091906109f7565b61070b565b6040516101829190610a46565b60405180910390f35b34801561019757600080fd5b506101a061073e565b005b60045481565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020157600080fd5b6000341161020e57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055503460048190555050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102ba57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361031357600080fd5b600454341461032157600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548160ff021916908315150217905550620151804261038b9190610a90565b60058190555050565b60025482826040516020016103aa929190610ad3565b60405160208183030381529060405280519060200120146103ca57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361042557600080fd5b600554421061043357600080fd5b811515600360009054906101000a900460ff161515036104bb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104b5573d6000803e3d6000fd5b50610523565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610521573d6000803e3d6000fd5b505b600060048190555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6005819055505050565b60055481565b6005544210156105ee57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610656573d6000803e3d6000fd5b50600060048190555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600581905550565b60008282604051602001610720929190610ad3565b60405160208183030381529060405280519060200120905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107f157600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610857573d6000803e3d6000fd5b50600060048190555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600581905550565b6000819050919050565b6108dd816108ca565b82525050565b60006020820190506108f860008301846108d4565b92915050565b600080fd5b6000819050919050565b61091681610903565b811461092157600080fd5b50565b6000813590506109338161090d565b92915050565b60006020828403121561094f5761094e6108fe565b5b600061095d84828501610924565b91505092915050565b60008115159050919050565b61097b81610966565b811461098657600080fd5b50565b60008135905061099881610972565b92915050565b6000602082840312156109b4576109b36108fe565b5b60006109c284828501610989565b91505092915050565b6109d4816108ca565b81146109df57600080fd5b50565b6000813590506109f1816109cb565b92915050565b60008060408385031215610a0e57610a0d6108fe565b5b6000610a1c85828601610989565b9250506020610a2d858286016109e2565b9150509250929050565b610a4081610903565b82525050565b6000602082019050610a5b6000830184610a37565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9b826108ca565b9150610aa6836108ca565b9250828201905080821115610abe57610abd610a61565b5b92915050565b610acd81610966565b82525050565b6000604082019050610ae86000830185610ac4565b610af560208301846108d4565b939250505056fea264697066735822122025e7ba87de1e0978bdfdaf8561f84a4e379b283e2281990062553f81f58cc8eb64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4665096D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x4665096D EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x70DEA79A EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xE6759813 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x18B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x11610C25 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x284152DC EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x38A3FDE7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x39F3027D EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x5DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x15180 TIMESTAMP PUSH2 0x38B SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AA SWAP3 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x4BB JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x720 SWAP3 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x857 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8DD DUP2 PUSH2 0x8CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x916 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 EQ PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x933 DUP2 PUSH2 0x90D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94F JUMPI PUSH2 0x94E PUSH2 0x8FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x95D DUP5 DUP3 DUP6 ADD PUSH2 0x924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x966 JUMP JUMPDEST DUP2 EQ PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9B3 PUSH2 0x8FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C2 DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D4 DUP2 PUSH2 0x8CA JUMP JUMPDEST DUP2 EQ PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9F1 DUP2 PUSH2 0x9CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x8FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1C DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2D DUP6 DUP3 DUP7 ADD PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xA40 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA9B DUP3 PUSH2 0x8CA JUMP JUMPDEST SWAP2 POP PUSH2 0xAA6 DUP4 PUSH2 0x8CA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xABE JUMPI PUSH2 0xABD PUSH2 0xA61 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xACD DUP2 PUSH2 0x966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xE7 0xBA DUP8 0xDE 0x1E MULMOD PUSH25 0xBDFDAF8561F84A4E379B283E2281990062553F81F58CC8EB64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "782:3856:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1581:437;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2024:576;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2834:875;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1114:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4282:351;;;;;;;;;;;;;:::i;:::-;;1362:139;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3778:397;;;;;;;;;;;;;:::i;:::-;;1089:18;;;;:::o;1581:437::-;1742:3;1723:23;;:7;;;;;;;;;;:23;;;1715:32;;;;;;1807:1;1795:9;:13;1787:22;;;;;;1876:10;1858:7;;:29;;;;;;;;;;;;;;;;;;1947:4;1933:11;:18;;;;2001:9;1995:3;:15;;;;1581:437;:::o;2024:576::-;2184:3;2165:23;;:7;;;;;;;;;;;:23;;;2157:32;;;;;;2275:3;2256:23;;:7;;;;;;;;;;:23;;;2248:32;;;;;;2361:3;;2348:9;:16;2340:25;;;;;;2433:10;2415:7;;:29;;;;;;;;;;;;;;;;;;2502:6;2488:11;;:20;;;;;;;;;;;;;;;;;;2582:8;2564:15;:26;;;;:::i;:::-;2551:10;:39;;;;2024:576;:::o;2834:875::-;3009:11;;2990:6;2998:5;2979:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2969:36;;;;;;:51;2961:60;;;;;;3101:3;3082:23;;:7;;;;;;;;;;;:23;;;3074:32;;;;;;3187:10;;3169:15;:28;3161:37;;;;;;3281:6;3266:21;;:11;;;;;;;;;;;:21;;;3262:297;;3339:7;;;;;;;;;;;:16;;:39;3356:21;3339:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3262:297;;;3508:7;;;;;;;;;;:16;;:39;3525:21;3508:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3262:297;3602:1;3596:3;:7;;;;3632:3;3614:7;;:22;;;;;;;;;;;;;;;;;;3665:3;3647:7;;:22;;;;;;;;;;;;;;;;;;3693:8;3680:10;:21;;;;2834:875;;:::o;1114:36::-;;;;:::o;4282:351::-;4384:10;;4365:15;:29;;4357:38;;;;;;4443:7;;;;;;;;;;;:16;;:39;4460:21;4443:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4526:1;4520:3;:7;;;;4556:3;4538:7;;:22;;;;;;;;;;;;;;;;;;4589:3;4571:7;;:22;;;;;;;;;;;;;;;;;;4617:8;4604:10;:21;;;;4282:351::o;1362:139::-;1430:7;1478:6;1486:5;1467:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1457:36;;;;;;1450:43;;1362:139;;;;:::o;3778:397::-;3873:7;;;;;;;;;;3859:21;;:10;:21;;;3851:30;;;;;;3966:3;3947:23;;:7;;;;;;;;;;;:23;;;3939:32;;;;;;4018:7;;;;;;;;;;:16;;:39;4035:21;4018:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4101:1;4095:3;:7;;;;4131:3;4113:7;;:22;;;;;;;;;;;;;;;;;;4159:8;4146:10;:21;;;;3778:397::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:77;806:7;835:5;824:16;;769:77;;;:::o;852:122::-;925:24;943:5;925:24;:::i;:::-;918:5;915:35;905:63;;964:1;961;954:12;905:63;852:122;:::o;980:139::-;1026:5;1064:6;1051:20;1042:29;;1080:33;1107:5;1080:33;:::i;:::-;980:139;;;;:::o;1125:329::-;1184:6;1233:2;1221:9;1212:7;1208:23;1204:32;1201:119;;;1239:79;;:::i;:::-;1201:119;1359:1;1384:53;1429:7;1420:6;1409:9;1405:22;1384:53;:::i;:::-;1374:63;;1330:117;1125:329;;;;:::o;1460:90::-;1494:7;1537:5;1530:13;1523:21;1512:32;;1460:90;;;:::o;1556:116::-;1626:21;1641:5;1626:21;:::i;:::-;1619:5;1616:32;1606:60;;1662:1;1659;1652:12;1606:60;1556:116;:::o;1678:133::-;1721:5;1759:6;1746:20;1737:29;;1775:30;1799:5;1775:30;:::i;:::-;1678:133;;;;:::o;1817:323::-;1873:6;1922:2;1910:9;1901:7;1897:23;1893:32;1890:119;;;1928:79;;:::i;:::-;1890:119;2048:1;2073:50;2115:7;2106:6;2095:9;2091:22;2073:50;:::i;:::-;2063:60;;2019:114;1817:323;;;;:::o;2146:122::-;2219:24;2237:5;2219:24;:::i;:::-;2212:5;2209:35;2199:63;;2258:1;2255;2248:12;2199:63;2146:122;:::o;2274:139::-;2320:5;2358:6;2345:20;2336:29;;2374:33;2401:5;2374:33;:::i;:::-;2274:139;;;;:::o;2419:468::-;2484:6;2492;2541:2;2529:9;2520:7;2516:23;2512:32;2509:119;;;2547:79;;:::i;:::-;2509:119;2667:1;2692:50;2734:7;2725:6;2714:9;2710:22;2692:50;:::i;:::-;2682:60;;2638:114;2791:2;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2762:118;2419:468;;;;;:::o;2893:118::-;2980:24;2998:5;2980:24;:::i;:::-;2975:3;2968:37;2893:118;;:::o;3017:222::-;3110:4;3148:2;3137:9;3133:18;3125:26;;3161:71;3229:1;3218:9;3214:17;3205:6;3161:71;:::i;:::-;3017:222;;;;:::o;3245:180::-;3293:77;3290:1;3283:88;3390:4;3387:1;3380:15;3414:4;3411:1;3404:15;3431:191;3471:3;3490:20;3508:1;3490:20;:::i;:::-;3485:25;;3524:20;3542:1;3524:20;:::i;:::-;3519:25;;3567:1;3564;3560:9;3553:16;;3588:3;3585:1;3582:10;3579:36;;;3595:18;;:::i;:::-;3579:36;3431:191;;;;:::o;3628:109::-;3709:21;3724:5;3709:21;:::i;:::-;3704:3;3697:34;3628:109;;:::o;3743:320::-;3858:4;3896:2;3885:9;3881:18;3873:26;;3909:65;3971:1;3960:9;3956:17;3947:6;3909:65;:::i;:::-;3984:72;4052:2;4041:9;4037:18;4028:6;3984:72;:::i;:::-;3743:320;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "573200",
								"executionCost": "71246",
								"totalCost": "644446"
							},
							"external": {
								"bet()": "2430",
								"cancel()": "infinite",
								"expiration()": "2429",
								"getHash(bool,uint256)": "infinite",
								"makeBet(bytes32)": "71088",
								"reveal(bool,uint256)": "infinite",
								"takeBet(bool)": "infinite",
								"timeout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 782,
									"end": 4638,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 908,
									"end": 911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 874,
									"end": 912,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 874,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 874,
									"end": 912,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 874,
									"end": 912,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 874,
									"end": 912,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 874,
									"end": 912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 953,
									"end": 956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 919,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 919,
									"end": 957,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 919,
									"end": 957,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 919,
									"end": 957,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 919,
									"end": 957,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1142,
									"end": 1150,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1114,
									"end": 1150,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1114,
									"end": 1150,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 4638,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025e7ba87de1e0978bdfdaf8561f84a4e379b283e2281990062553f81f58cc8eb64736f6c63430008110033",
									".code": [
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "4665096D"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "4665096D"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "70DEA79A"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "E6759813"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "EA8A1AF0"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "11610C25"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "284152DC"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "38A3FDE7"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "39F3027D"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 4638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1089,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1089,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1581,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1581,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2024,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2024,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2834,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2834,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1114,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1114,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4282,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1362,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1362,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1362,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3778,
											"end": 4175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1804,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1933,
											"end": 1944,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2010,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1995,
											"end": 2010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2010,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2248,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2340,
											"end": 2365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2340,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2443,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2564,
											"end": 2590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2564,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2564,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 2996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2979,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3005,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2961,
											"end": 3021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2961,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3187,
											"end": 3197,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3187,
											"end": 3197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3184,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3197,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3161,
											"end": 3198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3198,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3161,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3262,
											"end": 3559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3356,
											"end": 3377,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3262,
											"end": 3559,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3262,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3525,
											"end": 3546,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3262,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3647,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3680,
											"end": 3701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3701,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 3709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4282,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4384,
											"end": 4394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4380,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4394,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4365,
											"end": 4394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4443,
											"end": 4459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 4460,
											"end": 4481,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4526,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4520,
											"end": 4527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4571,
											"end": 4578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4604,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4604,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1467,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1493,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3778,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3869,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3851,
											"end": 3881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3881,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3851,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3939,
											"end": 3971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3971,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3939,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 4035,
											"end": 4056,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4146,
											"end": 4156,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4146,
											"end": 4167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 4175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 769,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 824,
											"end": 840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 824,
											"end": 840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 769,
											"end": 846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 974,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 852,
											"end": 974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 925,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 925,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 918,
											"end": 923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 905,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 905,
											"end": 968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 964,
											"end": 965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 954,
											"end": 966,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 905,
											"end": 968,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 905,
											"end": 968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 852,
											"end": 974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1119,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 980,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1071,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1107,
											"end": 1112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1080,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1080,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1119,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1454,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1125,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1219,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1231,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1201,
											"end": 1320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1239,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1318,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1239,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1201,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1384,
											"end": 1437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1437,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1384,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1550,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1460,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1672,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1556,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1626,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1626,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1648,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1606,
											"end": 1666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1666,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1606,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1678,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1766,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1799,
											"end": 1804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1775,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1805,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1775,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1811,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 2140,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1817,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1925,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 2009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1890,
											"end": 2009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1928,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1928,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1928,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1890,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2115,
											"end": 2122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2104,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2073,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2123,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2073,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 2140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 2140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 2140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 2140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 2140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2268,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2146,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2237,
											"end": 2242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2219,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2243,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2219,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2244,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2199,
											"end": 2262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2262,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2199,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2274,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2365,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2401,
											"end": 2406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2374,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2887,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2419,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2529,
											"end": 2538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2527,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2539,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2544,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2509,
											"end": 2628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2547,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2628,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2509,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2723,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2692,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2742,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2692,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2980,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3229,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3211,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3161,
											"end": 3232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3425,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3245,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3290,
											"end": 3291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3380,
											"end": 3395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3418,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3411,
											"end": 3412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3419,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3622,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3431,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3490,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3490,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3542,
											"end": 3543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3524,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3524,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3592,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3595,
											"end": 3613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3737,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3628,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3724,
											"end": 3729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3709,
											"end": 3730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 4063,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3743,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3971,
											"end": 3972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3960,
											"end": 3969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3953,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3909,
											"end": 3974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3974,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3909,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3984,
											"end": 4056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4056,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3984,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 4063,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 4063,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 4063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 4063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 4063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 4063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Coin Flip Contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bet()": "11610c25",
							"cancel()": "ea8a1af0",
							"expiration()": "4665096d",
							"getHash(bool,uint256)": "e6759813",
							"makeBet(bytes32)": "284152dc",
							"reveal(bool,uint256)": "39f3027d",
							"takeBet(bool)": "38a3fde7",
							"timeout()": "70dea79a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"makeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"name\":\"takeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Coin Flip Contract.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Coin Flip Contract.sol\":{\"keccak256\":\"0x8a0888797f0e7666616d6174a78090d102f1986002b3e44390e94aad52f70d43\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ad8cc51cc342b39df3251ccd38d9df8c1fd6101cff9a5a8636429150f93199b8\",\"dweb:/ipfs/Qma2VF6efbvfu1HMkippWfaMczgNfzMjDjv9PLCqxWqP6t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Coin Flip Contract.sol:CoinFlip",
								"label": "player1",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 13,
								"contract": "Coin Flip Contract.sol:CoinFlip",
								"label": "player2",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 15,
								"contract": "Coin Flip Contract.sol:CoinFlip",
								"label": "p1selection",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							},
							{
								"astId": 17,
								"contract": "Coin Flip Contract.sol:CoinFlip",
								"label": "p2selection",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 19,
								"contract": "Coin Flip Contract.sol:CoinFlip",
								"label": "bet",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "Coin Flip Contract.sol:CoinFlip",
								"label": "expiration",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Coin Flip Contract.sol": {
				"ast": {
					"absolutePath": "Coin Flip Contract.sol",
					"exportedSymbols": {
						"CoinFlip": [
							318
						]
					},
					"id": 319,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "CoinFlip",
							"nameLocation": "791:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "player1",
									"nameLocation": "890:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 318,
									"src": "874:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "874:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "908:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "900:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "900:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "900:12:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "player2",
									"nameLocation": "935:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 318,
									"src": "919:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "919:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 11,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "953:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "945:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 9,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "945:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "945:12:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "p1selection",
									"nameLocation": "1009:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 318,
									"src": "1001:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 14,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1001:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "p2selection",
									"nameLocation": "1032:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 318,
									"src": "1027:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1027:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "11610c25",
									"id": 19,
									"mutability": "mutable",
									"name": "bet",
									"nameLocation": "1104:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 318,
									"src": "1089:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1089:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4665096d",
									"id": 26,
									"mutability": "mutable",
									"name": "expiration",
									"nameLocation": "1129:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 318,
									"src": "1114:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1114:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 23,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 21,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1142:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 22,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1145:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "1142:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 24,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1149:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1142:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1439:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 38,
																	"name": "choice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1478:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 39,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1486:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 36,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1467:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1471:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1467:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1467:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 35,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1457:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 34,
												"id": 42,
												"nodeType": "Return",
												"src": "1450:43:0"
											}
										]
									},
									"functionSelector": "e6759813",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHash",
									"nameLocation": "1371:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "1384:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1379:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 27,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1400:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1392:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:28:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1430:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:9:0"
									},
									"scope": 318,
									"src": "1362:139:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1629:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 50,
																"name": "player1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1734:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 51,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1734:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1734:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1723:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1715:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "1715:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 59,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1795:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1799:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1795:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1807:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1795:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1787:22:0"
											},
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "player1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 68,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1876:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1880:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1876:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1868:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 66,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1868:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1868:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1858:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1858:29:0"
											},
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "p1selection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1933:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 74,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1947:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1933:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1933:18:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 77,
														"name": "bet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1995:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 78,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2001:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2005:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2001:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1995:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1995:15:0"
											}
										]
									},
									"functionSelector": "284152dc",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeBet",
									"nameLocation": "1590:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1606:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1598:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 45,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1597:14:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1629:0:0"
									},
									"scope": 318,
									"src": "1581:437:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "2071:529:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "player2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "2165:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2184:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2176:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2176:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2176:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2165:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2157:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "player1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "2256:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2275:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2267:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 99,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2267:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2267:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2256:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2248:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 107,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2348:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2352:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2348:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 109,
																"name": "bet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2361:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2348:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2340:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2340:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "2340:25:0"
											},
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "player2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 116,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2433:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2437:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2433:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2425:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2425:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2425:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2415:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "2415:29:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "p2selection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2488:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2502:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2488:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2488:20:0"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2551:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 126,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2564:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2570:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2564:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3234",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2582:8:0",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "24"
														},
														"src": "2564:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2551:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2551:39:0"
											}
										]
									},
									"functionSelector": "38a3fde7",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "takeBet",
									"nameLocation": "2033:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "2046:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2041:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2041:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:13:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2071:0:0"
									},
									"scope": 318,
									"src": "2024:576:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2887:822:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 144,
																				"name": "choice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 135,
																				"src": "2990:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"id": 145,
																				"name": "nonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "2998:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 142,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2979:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2983:6:0",
																			"memberName": "encode",
																			"nodeType": "MemberAccess",
																			"src": "2979:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2979:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 141,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2969:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2969:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 148,
																"name": "p1selection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "3009:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2969:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2961:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2961:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2961:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 153,
																"name": "player2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3082:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3101:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3093:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 154,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3093:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3093:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3082:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3074:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "3074:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 162,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3169:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3175:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3169:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 164,
																"name": "expiration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "3187:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3169:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3161:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "3161:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 168,
														"name": "p2selection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "3266:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 169,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "3281:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3266:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 192,
													"nodeType": "Block",
													"src": "3458:101:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 187,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3533:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$318",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$318",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3525:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 185,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3525:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3525:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3539:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3525:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 182,
																		"name": "player1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "3508:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3516:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3508:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3508:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 191,
															"nodeType": "ExpressionStatement",
															"src": "3508:39:0"
														}
													]
												},
												"id": 193,
												"nodeType": "IfStatement",
												"src": "3262:297:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "3289:101:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 176,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3364:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$318",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$318",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3356:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 174,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3356:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3356:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3370:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3356:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 171,
																		"name": "player2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "3339:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3347:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3339:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3339:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "ExpressionStatement",
															"src": "3339:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 194,
														"name": "bet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "3596:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3602:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3596:7:0"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "player1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "3614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3632:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3624:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 199,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3624:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3624:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3614:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "3614:22:0"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 205,
														"name": "player2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "3647:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3665:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3657:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 206,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3657:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3657:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3647:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "3647:22:0"
											},
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "3680:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...9935"
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9936"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3693:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "323536",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3696:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"value": "256"
															},
															"src": "3693:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9936"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3700:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3693:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...9935"
														}
													},
													"src": "3680:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "3680:21:0"
											}
										]
									},
									"functionSelector": "39f3027d",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reveal",
									"nameLocation": "2843:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "2855:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2850:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2871:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2849:28:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2887:0:0"
									},
									"scope": 318,
									"src": "2834:875:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "3805:370:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 225,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3859:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3863:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3859:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 227,
																"name": "player1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "3873:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3859:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "3851:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 232,
																"name": "player2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3947:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3966:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3958:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 233,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3958:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3958:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3947:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "3939:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 245,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4043:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$318",
																			"typeString": "contract CoinFlip"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CoinFlip_$318",
																			"typeString": "contract CoinFlip"
																		}
																	],
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4035:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 243,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4035:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4035:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4049:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4035:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 240,
															"name": "player1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "4018:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4026:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4018:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4018:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "4018:39:0"
											},
											{
												"expression": {
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 250,
														"name": "bet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "4095:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "4095:7:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 254,
														"name": "player1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "4113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4131:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4123:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 255,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4123:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4123:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4113:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "4113:22:0"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 261,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "4146:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...9935"
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9936"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "323536",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4162:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"value": "256"
															},
															"src": "4159:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9936"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4166:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4159:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...9935"
														}
													},
													"src": "4146:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "4146:21:0"
											}
										]
									},
									"functionSelector": "ea8a1af0",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "3787:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:2:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3805:0:0"
									},
									"scope": 318,
									"src": "3778:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "4310:323:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 274,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4365:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4371:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4365:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 276,
																"name": "expiration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "4384:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4365:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4357:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "4357:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 285,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4468:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$318",
																			"typeString": "contract CoinFlip"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CoinFlip_$318",
																			"typeString": "contract CoinFlip"
																		}
																	],
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4460:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 283,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4460:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4460:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4474:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4460:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 280,
															"name": "player2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "4443:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4451:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4443:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4443:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "4443:39:0"
											},
											{
												"expression": {
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "bet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "4520:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "4520:7:0"
											},
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 294,
														"name": "player1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "4538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4556:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4548:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 295,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4548:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4548:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4538:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "4538:22:0"
											},
											{
												"expression": {
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 301,
														"name": "player2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "4571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4589:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4581:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 302,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4581:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4581:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4571:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "4571:22:0"
											},
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "4604:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...9935"
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9936"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4617:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "323536",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4620:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"value": "256"
															},
															"src": "4617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9936"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4617:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...9935"
														}
													},
													"src": "4604:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "4604:21:0"
											}
										]
									},
									"functionSelector": "70dea79a",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeout",
									"nameLocation": "4291:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4298:2:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4310:0:0"
									},
									"scope": 318,
									"src": "4282:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 319,
							"src": "782:3856:0",
							"usedErrors": []
						}
					],
					"src": "39:4599:0"
				},
				"id": 0
			}
		}
	}
}